<graph>
    <nodes>
        <node>
            <nodeId>#Start</nodeId>
            <nodeType>Control</nodeType>
            <physicalDescription>
                <serviceName/>
                <serviceGlobalId/>
                <address/>
                <operation/>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses/>
                <description>Start node</description>
                <metaKeywords/>
                <inputs>
                    <input>
                        <class>Interval</class>
                        <id>intervalValue</id>
                        <label>Interval value</label>
                        <dataType>Integer</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>intervalValue</outputId>
                        </source>
                    </input>
                    <input>
                        <class>IntervalType</class>
                        <id>intervalType</id>
                        <label>Interval type</label>
                        <dataType>IntervalType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>intervalType</outputId>
                        </source>
                    </input>
                    <input>
                        <class>UserId</class>
                        <id>userId</id>
                        <label>User ID</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>userId</outputId>
                        </source>
                    </input>
                    <input>
                        <class>SensorType</class>
                        <id>sensorType</id>
                        <label>Sensor type</label>
                        <dataType>SensorType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>sensorType</outputId>
                        </source>
                    </input>
                    <input>
                        <class>UserId</class>
                        <id>userId411586</id>
                        <label>User ID</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>userId</outputId>
                        </source>
                    </input>
                    <input>
                        <class>ProcessingResultName</class>
                        <id>name</id>
                        <label>Name</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>name</outputId>
                        </source>
                    </input>
                    <input>
                        <class>EndTimestamp</class>
                        <id>endDate</id>
                        <label>End date</label>
                        <dataType>Long</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>endDate</outputId>
                        </source>
                    </input>
                    <input>
                        <class>StatisticType</class>
                        <id>statisticType</id>
                        <label>Statistic type</label>
                        <dataType>StatisticType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>statisticType</outputId>
                        </source>
                    </input>
                    <input>
                        <class>StartTimestamp</class>
                        <id>startDate</id>
                        <label>Start date</label>
                        <dataType>Long</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>startDate</outputId>
                        </source>
                    </input>
                    <input>
                        <class>EmailAddress</class>
                        <id>alertRecipientEmailAddress</id>
                        <label>Alert recipient's e-mail address</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>alertRecipientEmailAddress</outputId>
                        </source>
                    </input>
                    <input>
                        <class>Threshold</class>
                        <id>threshold</id>
                        <label>Threshold</label>
                        <dataType>Double</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>threshold</outputId>
                        </source>
                    </input>
                    <input>
                        <class>Relation</class>
                        <id>relation</id>
                        <label>Relation</label>
                        <dataType>Relation</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>relation</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs>
                    <output>
                        <class>Interval</class>
                        <id>intervalValue</id>
                        <label>Interval value</label>
                        <dataType>Integer</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>IntervalType</class>
                        <id>intervalType</id>
                        <label>Interval type</label>
                        <dataType>IntervalType</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>UserId</class>
                        <id>userId</id>
                        <label>User ID</label>
                        <dataType>String</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>SensorType</class>
                        <id>sensorType</id>
                        <label>Sensor type</label>
                        <dataType>SensorType</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>UserId</class>
                        <id>userId411586</id>
                        <label>User ID</label>
                        <dataType>String</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>ProcessingResultName</class>
                        <id>name</id>
                        <label>Name</label>
                        <dataType>String</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>EndTimestamp</class>
                        <id>endDate</id>
                        <label>End date</label>
                        <dataType>Long</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>StatisticType</class>
                        <id>statisticType</id>
                        <label>Statistic type</label>
                        <dataType>StatisticType</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>StartTimestamp</class>
                        <id>startDate</id>
                        <label>Start date</label>
                        <dataType>Long</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>EmailAddress</class>
                        <id>alertRecipientEmailAddress</id>
                        <label>Alert recipient's e-mail address</label>
                        <dataType>String</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>Threshold</class>
                        <id>threshold</id>
                        <label>Threshold</label>
                        <dataType>Double</dataType>
                        <properties/>
                    </output>
                    <output>
                        <class>Relation</class>
                        <id>relation</id>
                        <label>Relation</label>
                        <dataType>Relation</dataType>
                        <properties/>
                    </output>
                </outputs>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType>#start</controlType>      
            <condition/>
            <targets>
                <target>node---0000001</target>
                <target>node---000002</target>
                <target>node---000003</target>
                <target>node---000005</target>
            </targets>
            <alternatives/>
            <subGraph/>
        </node>
        <node>
            <nodeId>node---0000001</nodeId>
            <nodeType>JavaService</nodeType>
            <physicalDescription>
                <serviceName>GetSpeed</serviceName>
                <serviceGlobalId>27e77344-9566-3a7f-92e5-67a9cb06097e</serviceGlobalId>
                <address>http://platelos.pl:11237/SmartFit/SmartFitMediator?wsdl</address>
                <operation>getSpeed</operation>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses>
                    <serviceClass>SensorDataAcquisition</serviceClass>
                </serviceClasses>
                <description>Service that returns a list of sensor readings as floating point values.</description>
                <metaKeywords>
                    <metaKeyword>data</metaKeyword>
                    <metaKeyword>mediator</metaKeyword>
                    <metaKeyword>sensor</metaKeyword>
                </metaKeywords>
                <inputs>
                    <input>
                        <class>Interval</class>
                        <id>intervalValue</id>
                        <label>Interval value</label>
                        <dataType>Integer</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>intervalValue</outputId>
                        </source>
                    </input>
                    <input>
                        <class>UserId</class>
                        <id>userId</id>
                        <label>User ID</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>userId</outputId>
                        </source>
                    </input>
                    <input>
                        <class>IntervalType</class>
                        <id>intervalType</id>
                        <label>Interval type</label>
                        <dataType>IntervalType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>intervalType</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs>
                    <output>
                        <class>SensorData</class>
                        <id>ArrayList</id>
                        <label>Sensor data</label>
                        <dataType>List[Double]</dataType>
                        <properties/>
                    </output>
                </outputs>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType/>
            <condition/>
            <targets>
                <target>node-000002</target>
            </targets>
            <alternatives/>
            <subGraph/>
        </node>
        <node>
            <nodeId>node---000002</nodeId>
            <nodeType>JavaService</nodeType>
            <physicalDescription>
                <serviceName>GetSensorDataArithmeticMean</serviceName>
                <serviceGlobalId>48c18194-c37a-39a8-a6e3-bfb2c6ad3e32</serviceGlobalId>
                <address>http://platelos.pl:11242/DataProcessing?wsdl</address>
                <operation>getSensorDataArithmeticMean</operation>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses>
                    <serviceClass>StatisticCalculation</serviceClass>
                </serviceClasses>
                <description>Service that returns arithmetic mean of input sensor data.</description>
                <metaKeywords>
                    <metaKeyword>arithmetic</metaKeyword>
                    <metaKeyword>data</metaKeyword>
                    <metaKeyword>mean</metaKeyword>
                    <metaKeyword>processing</metaKeyword>
                    <metaKeyword>sensor</metaKeyword>
                </metaKeywords>
                <inputs>
                    <input>
                        <class>SensorType</class>
                        <id>sensorType</id>
                        <label>Sensor type</label>
                        <dataType>SensorType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>sensorType</outputId>
                        </source>
                    </input>
                    <input>
                        <class>IntervalType</class>
                        <id>intervalType</id>
                        <label>Interval type</label>
                        <dataType>IntervalType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>intervalType</outputId>
                        </source>
                    </input>
                    <input>
                        <class>SensorData</class>
                        <id>data</id>
                        <label>Sensor data</label>
                        <dataType>List[Double]</dataType>
                        <properties/>
                        <source>
                            <nodeId>node---0000001</nodeId>
                            <outputId>ArrayList</outputId>
                        </source>
                    </input>
                    <input>
                        <class>Interval</class>
                        <id>intervalValue</id>
                        <label>Interval value</label>
                        <dataType>Integer</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>intervalValue</outputId>
                        </source>
                    </input>
                    <input>
                        <class>UserId</class>
                        <id>userId</id>
                        <label>User ID</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>userId411586</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs>
                    <output>
                        <class>SampleStatistic</class>
                        <id>arithmeticMean</id>
                        <label>Sensor data arithmetic mean</label>
                        <dataType>SerialDouble</dataType>
                        <properties/>
                    </output>
                </outputs>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType/>
            <condition/>
            <targets>
                <target>node---000004</target>
            </targets>
            <alternatives/>
            <subGraph/>
        </node>
        <node>
            <nodeId>node---000003</nodeId>
            <nodeType>JavaService</nodeType>
            <physicalDescription>
                <serviceName>GetPreviousSampleStatistic</serviceName>
                <serviceGlobalId>dd63ac5b-9155-3bad-828f-dd619c6300c1</serviceGlobalId>
                <address>http://stopka2.zsi.pwr.wroc.pl:11243/ProcessingMediator?wsdl</address>
                <operation>getSampleStatistic</operation>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses>
                    <serviceClass>ProcessingResultAcquisition</serviceClass>
                </serviceClasses>
                <description>Service that returns from the database a sample statistic which start and end date match the input parameters.</description>
                <metaKeywords>
                    <metaKeyword>data</metaKeyword>
                    <metaKeyword>mediator</metaKeyword>
                    <metaKeyword>processing</metaKeyword>
                    <metaKeyword>statistic</metaKeyword>
                </metaKeywords>
                <inputs>
                    <input>
                        <class>ProcessingResultName</class>
                        <id>name</id>
                        <label>Name</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>name</outputId>
                        </source>
                    </input>
                    <input>
                        <class>EndTimestamp</class>
                        <id>endDate</id>
                        <label>End date</label>
                        <dataType>Long</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>endDate</outputId>
                        </source>
                    </input>
                    <input>
                        <class>StatisticType</class>
                        <id>statisticType</id>
                        <label>Statistic type</label>
                        <dataType>StatisticType</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>statisticType</outputId>
                        </source>
                    </input>
                    <input>
                        <class>StartTimestamp</class>
                        <id>startDate</id>
                        <label>Start date</label>
                        <dataType>Long</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>startDate</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs>
                    <output>
                        <class>SampleStatistic</class>
                        <id>statistic</id>
                        <label>Statistic</label>
                        <dataType>SerialDouble</dataType>
                        <properties/>
                    </output>
                </outputs>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType/>
            <condition/>
            <targets>
                <target>node---000004</target>
            </targets>
            <alternatives/>
            <subGraph/>
        </node>
        <node>
            <nodeId>node---000004</nodeId>
            <nodeType>JavaService</nodeType>
            <physicalDescription>
                <serviceName>GetAbsStatistcQuotient</serviceName>
                <serviceGlobalId>ff108f50-53de-3535-b531-fb51c51266a9</serviceGlobalId>
                <address>http://platelos.pl:11244/Analysis?wsdl</address>
                <operation>getAbsStatisticsQuotient</operation>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses>
                    <serviceClass>SimpleStatisticAnalysis</serviceClass>
                </serviceClasses>
                <description>Service that returns absolute quotient of statistics.</description>
                <metaKeywords>
                    <metaKeyword>abs</metaKeyword>
                    <metaKeyword>quotient</metaKeyword>
                    <metaKeyword>statistic</metaKeyword>
                </metaKeywords>
                <inputs>
                    <input>
                        <class>DataProcessingResult</class>
                        <id>previousStat</id>
                        <label>Previous statistic</label>
                        <dataType>SerialDouble</dataType>
                        <properties/>
                        <source>
                            <nodeId>node---000002</nodeId>
                            <outputId>arithmeticMean</outputId>
                        </source>
                    </input>
                    <input>
                        <class>DataProcessingResult</class>
                        <id>currentStat</id>
                        <label>Current statistic</label>
                        <dataType>SerialDouble</dataType>
                        <properties/>
                        <source>
                            <nodeId>node---000003</nodeId>
                            <outputId>statistic</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs>
                    <output>
                        <class>AbsoluteStatisticsQuotient</class>
                        <id>quotient</id>
                        <label>Statistics quotient</label>
                        <dataType>AnalysisResult</dataType>
                        <properties/>
                    </output>
                </outputs>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType/>
            
            <condition/>
            <targets>
                <target>node---000005</target>
            </targets>
            <alternatives/>
            <subGraph/>
        </node>
        <node>
            <nodeId>node---000005</nodeId>
            <nodeType>JavaService</nodeType>
            <physicalDescription>
                <serviceName>CheckAnomalyLevel</serviceName>
                <serviceGlobalId>3918cf97-1b0f-3a7f-b8b2-445dc53460ac</serviceGlobalId>
                <address>http://platelos.pl:11246/AnomalyDetection?wsdl</address>
                <operation>checkAnomalyLevel</operation>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses>
                    <serviceClass>AnomalyDetection</serviceClass>
                </serviceClasses>
                <description>Service that checks the anomaly level and sends an e-mail notification in case of threshold exceedance.</description>
                <metaKeywords>
                    <metaKeyword>anomaly</metaKeyword>
                    <metaKeyword>check</metaKeyword>
                    <metaKeyword>level</metaKeyword>
                </metaKeywords>
                <inputs>
                    <input>
                        <class>EmailAddress</class>
                        <id>alertRecipientEmailAddress</id>
                        <label>Alert recipient's e-mail address</label>
                        <dataType>String</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>alertRecipientEmailAddress</outputId>
                        </source>
                    </input>
                    <input>
                        <class>AnalysisResult</class>
                        <id>analysisResult</id>
                        <label>Analysis result</label>
                        <dataType>AnalysisResult</dataType>
                        <properties/>
                        <source>
                            <nodeId>node---000004</nodeId>
                            <outputId>quotient</outputId>
                        </source>
                    </input>
                    <input>
                        <class>Threshold</class>
                        <id>threshold</id>
                        <label>Threshold</label>
                        <dataType>Double</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>threshold</outputId>
                        </source>
                    </input>
                    <input>
                        <class>Relation</class>
                        <id>relation</id>
                        <label>Relation</label>
                        <dataType>Relation</dataType>
                        <properties/>
                        <source>
                            <nodeId>#Start</nodeId>
                            <outputId>relation</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs>
                    <output>
                        <class>DetectionResult</class>
                        <id>detectionResult</id>
                        <label>Anomaly detectionResult</label>
                        <dataType>DetectionResult</dataType>
                        <properties/>
                    </output>
                </outputs>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType/>
            <condition/>
            <targets>
                <target>#End</target>
            </targets>
            <alternatives/>
            <subGraph/>
        </node>
        <node>
            <nodeId>#End</nodeId>
            <nodeType>Control</nodeType>
            <physicalDescription>
                <serviceName/>
                <serviceGlobalId/>
                <address/>
                <operation/>
            </physicalDescription>
            <functionalDescription>
                <serviceClasses/>
                <description>end node</description>
                <metaKeywords/>
                <inputs>
                    <input>
                        <class>DetectionResult</class>
                        <id>detectionResult</id>
                        <label>Anomaly detectionResult</label>
                        <dataType>DetectionResult</dataType>
                        <properties/>
                        <source>
                            <nodeId>node---000005</nodeId>
                            <outputId>detectionResult</outputId>
                        </source>
                    </input>
                </inputs>
                <outputs/>
                <preconditions/>
                <effects/>
            </functionalDescription>
            <nonFunctionalDescription/>
            <controlType>#end</controlType>
            <condition/>
            <targets/>
            <alternatives/>
            <subGraph/>
        </node>
    </nodes>
    <inputVariables>
        <inputVariable>
            <name>intervalValue</name>
            <value>80</value>
            <type>Integer</type>
        </inputVariable>
        <inputVariable>
            <name>intervalType</name>
            <value>DAY</value>
            <type>IntervalType</type>
        </inputVariable>
        <inputVariable>
            <name>userId</name>
            <value>2</value>
            <type>String</type>
        </inputVariable>
        <inputVariable>
            <name>sensorType</name>
            <value>SPEED_SENSOR</value>
            <type>SensorType</type>
        </inputVariable>
        <inputVariable>
            <name>name</name>
            <value>test$SPEED_SENSOR</value>
            <type>String</type>
        </inputVariable>
        <inputVariable>
            <name>endDate</name>
            <value>1347449790733</value>
            <type>Long</type>
        </inputVariable>
        <inputVariable>
            <name>statisticType</name>
            <value>ARITHMETIC_MEAN</value>
            <type>StatisticType</type>
        </inputVariable>
        <inputVariable>
            <name>startDate</name>
            <value>1347017790733</value>
            <type>Long</type>
        </inputVariable>
        <inputVariable>
            <name>alertRecipientEmailAddress</name>
            <value>179364@student.pwr.wroc.pl</value>
            <type>String</type>
        </inputVariable>
        <inputVariable>
            <name>threshold</name>
            <value>1.1</value>
            <type>Double</type>
        </inputVariable>
        <inputVariable>
            <name>relation</name>
            <value>GTE</value>
            <type>Relation</type>
        </inputVariable>
    </inputVariables>
    <nonFunctionalParameters/>
</graph>
